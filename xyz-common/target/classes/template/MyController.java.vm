package ${package.Controller};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.demo.xyz.common.core.R;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import lombok.extern.slf4j.Slf4j;
import lombok.AllArgsConstructor;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

/**
 * <p>
 * $!{entity} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@RestController
@AllArgsConstructor
@RequestMapping("/v1/${table.entityPath}")
public class ${table.controllerName} {
    private final ${table.serviceName} ${table.entityPath}Service;

    /**
     * 简单分页查询
     * @param page 分页对象
     * @param vo
     * @return R
     */
    @GetMapping("/listByQuery")
    public R<IPage<${entity}ResqVo>> listByQuery(Page page, ${entity}QueryVo vo) {
        IPage<${entity}> ${table.entityPath}Page = ${table.entityPath}Service.listByQuery(page, vo);
        IPage<${entity}ResqVo>> ${entity}ResqPage = new Page<>();
        List<${entity}ResqVo>> ${entity}ResqList = new ArrayList<>();
        ${table.entityPath}Page.getRecords().forEach(t -> {
            ${entity}ResqVo vo = new ${entity}ResqVo();
            BeanUtils.copyProperties(t,vo);
            ${entity}ResqList.add(vo)
        });
        ${entity}ResqPage.setRecords(${entity}ResqList);
        return new R<>(${entity}ResqPage);
    }

    /**
     * 通过id查询记录
     * @param id
     * @return R
     */
    @GetMapping("/getById")
    public R<${entity}RespVo> getById(@RequestParam("id") Integer id) {
        ${entity} ${table.entityPath} = ${table.entityPath}Service.getById(id)
        ${entity}RespVo vo = new ${entity}RespVo();
        BeanUtils.copyProperties(${table.entityPath},vo);
        return new R<>(vo);
    }

    /**
     * 新增记录
     * @param vo
     * @return R
     */
    @PostMapping("/add")
    public R add(@RequestBody ${entity}AddReqVo vo) {
        return new R<>(${table.entityPath}Service.addOrUpdate(vo));
    }

    /**
     * 修改记录
     * @param vo
     * @return R
     */
    @PutMapping("/updateById")
    public R updateById(@RequestBody ${entity}AddReqVo vo) {
        ${entity} ${table.entityPath} = new ${entity}();
        BeanUtils.copyProperties(vo,${table.entityPath});
        return new R<>(${table.entityPath}Service.addOrUpdate(${table.entityPath}));
    }

    /**
     * 通过id删除一条记录
     * @param id
     * @return R
     */
    @DeleteMapping("/delete")
    public R deleteById(@RequestParam("id") Integer id) {
        return new R<>(${table.entityPath}Service.deleteById(id));
    }
}