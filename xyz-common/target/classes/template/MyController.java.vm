package ${package.Controller};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package.Service}.${table.serviceName};
import ${package.Other}.${table.entityName}QueryVo;
import ${package.Other}.${table.entityName}AddReqVo;
import ${package.Other}.${table.entityName}RespVo;
import com.demo.xyz.common.core.R;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

/**
 * $!{table.comment}controller
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@RestController
@AllArgsConstructor
@RequestMapping("/v1/${table.entityPath}")
public class ${table.controllerName} {
    private final ${table.serviceName} ${table.entityPath}Service;

    /**
     * 简单分页查询
     * @param page 分页对象
     * @param vo
     * @return R
     */
    @GetMapping("/listByQuery")
    public R<Page<${entity}RespVo>> listByQuery(Page page, ${entity}QueryVo vo) {
        return new R<>(${table.entityPath}Service.listByQuery(page, vo));
    }

    /**
     * 通过id查询记录
     * @param id
     * @return R
     */
    @GetMapping("/getById")
    public R<${entity}RespVo> getById(@RequestParam("id") Integer id) {
        return new R<>(${table.entityPath}Service.findById(id));
    }

    /**
     * 新增记录
     * @param vo
     * @return R
     */
    @PostMapping("/add")
    public R add(@RequestBody ${entity}AddReqVo vo) {
        return new R<>(${table.entityPath}Service.addOrUpdate(vo));
    }

    /**
     * 修改记录
     * @param vo
     * @return R
     */
    @PutMapping("/updateById")
    public R updateById(@RequestBody ${entity}AddReqVo vo) {
        return new R<>(${table.entityPath}Service.addOrUpdate(vo));
    }

    /**
     * 通过id删除一条记录
     * @param id
     * @return R
     */
    @DeleteMapping("/deleteById")
    public R deleteById(@RequestParam("id") Integer id) {
        return new R<>(${table.entityPath}Service.removeById(id));
    }
}